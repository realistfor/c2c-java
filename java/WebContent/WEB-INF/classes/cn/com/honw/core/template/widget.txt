/**
 * 项目名：社区娱乐项目
 * 包名：org.clover.onetime.service.#{Entity}
 * 文件名：#{Entity}Widget.java
 * 版本信息：version V0.5
 * 日期：2012/04/09-09:06:04
 * Copyright (c) 2012一点私家公司-版权所有
 */
package #{widget_p};

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import org.clover.onetime.core.dao.Page;
import org.clover.onetime.core.web.bind.annotation.PrefParam;
import org.clover.onetime.core.web.bind.annotation.RequestAttr;
import org.clover.onetime.core.web.stereotype.Widget;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.context.request.WebRequest;
import org.springframework.beans.factory.annotation.Autowired;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import org.clover.onetime.entity.user.RealUserMenus;
import org.clover.onetime.web.Constants;
import org.clover.onetime.entity.user.RealUser;
import org.clover.onetime.entity.user.RealUserInfo;
import #{entity_p}.#{Entity};
import #{manager_p}.I#{Entity}Service;

@Widget
@RequestMapping("/#{config_entity}")
public class #{Entity}Widget {
	private static final Logger log = LoggerFactory.getLogger(#{Entity}Widget.class);
	@Autowired
	private I#{Entity}Service manager;

	@RequestMapping("/v_list")
	public String toList(Page<#{Entity}> page, Model model, WebRequest request) {
		page = manager.getPage(page);
		model.addAttribute("page",page);
		return "#{config_entity}/list";
	}
	
	@RequestMapping("/form-view")
	public String toFormView(@PrefParam String activityType,@RequestAttr RealUser realUser,
			@RequestAttr RealUserInfo userInfo, @ModelAttribute @Valid #{Entity} #{config_entity},Model model, WebRequest request) {
		if(realUser == null){
			return "commons/blank";
		}

		model.addAttribute("#{config_entity}",#{config_entity});
		
		return "#{config_entity}/#{config_entity}-form";
	}
	
	@RequestMapping(value="/form-action", method=RequestMethod.POST)
	public String toFormAction(@RequestAttr RealUserInfo userInfo, 
			@ModelAttribute @Valid #{Entity} #{config_entity}, BindingResult result,Model model, WebRequest request) {
		if(result.hasErrors()) {
			model.addAttribute(Constants.SHOW_ERRORS_KEY_READABLE, true);
			model.addAttribute(Constants.MAINMENU_CODE_KEY_READABLE, RealUserMenus.MAINMENU_SPACE);
			return "page:/#{config_entity}/#{config_entity}-detail";
		}
		if(#{config_entity}.getId() != null)
			manager.update(#{config_entity});
		else
			manager.save(#{config_entity});
		
		return "#{config_entity}/#{config_entity}-list";
	}

}